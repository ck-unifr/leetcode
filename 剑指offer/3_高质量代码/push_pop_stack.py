"""
面试题22 栈的压入弹出序列
要求：判断给定的两个序列中，后者是不是前者的弹出序列，给定栈不包含相同值

思路：使用一个辅助栈, 如果辅助栈栈顶元素不等于出栈元素，则从入栈中找改值，直到入栈为空

如果最后出栈序列为空，则是入栈的弹出序列值

题目描述
输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否为该栈的弹出顺序。假设压入栈的所有数字均不相等。例如序列1,2,3,4,5是某栈的压入顺序，序列4，5,3,2,1是该压栈序列对应的一个弹出序列，但4,3,5,1,2就不可能是该压栈序列的弹出序列。（注意：这两个序列的长度是相等的）

解题思路
新建一个栈，和一个指向出栈序列第一个元素的指针。
按照入栈顺序存入序列。当任一时刻栈顶元素和指针指向的出栈序列的第一个元素相同时，弹出该栈顶元素，并右移指针；
继续判断新的栈顶元素与指针指向的元素是否相同。当不同时继续按入栈序列将元素入栈，并重复上述步骤。

"""


class Solution:
    def IsPopOrder(self, pushV, popV):
        stack = []
        index = 0
        while pushV:
            stack.append(pushV.pop(0))
            while stack and stack[-1] == popV[index]:
                stack.pop(-1)
                index += 1
        return not stack
